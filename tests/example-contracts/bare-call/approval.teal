#pragma version 8
intcblock 0 1
bytecblock 0x151f7c75 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xf81e962d // "call(string)string"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x3d9fe353 // "call_txn(pay,string)string"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x44d0da0d // "error()void"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub error_2
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 2
txn GroupIndex
intc_1 // 1
-
store 1
load 1
gtxns TypeEnum
intc_1 // pay
==
assert
load 1
load 2
callsub calltxn_1
store 3
bytec_0 // 0x151f7c75
load 3
concat
log
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub call_0
store 0
bytec_0 // 0x151f7c75
load 0
concat
log
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l14
txn OnCompletion
pushint 4 // UpdateApplication
==
bnz main_l13
txn OnCompletion
pushint 5 // DeleteApplication
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
!=
assert
callsub delete_5
intc_1 // 1
return
main_l13:
txn ApplicationID
intc_0 // 0
!=
assert
callsub update_4
intc_1 // 1
return
main_l14:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_3
intc_1 // 1
return

// call
call_0:
proto 1 1
bytec_1 // ""
pushbytes 0x48656c6c6f2c20 // "Hello, "
frame_dig -1
extract 2 0
concat
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// call_txn
calltxn_1:
proto 2 1
bytec_1 // ""
pushbytes 0x53656e7420 // "Sent "
frame_dig -2
gtxns Amount
itob
concat
pushbytes 0x2e20 // ". "
concat
frame_dig -1
extract 2 0
concat
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
retsub

// error
error_2:
proto 0 0
intc_0 // 0
assert
retsub

// create
create_3:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushbytes 0x76616c7565 // "value"
pushint TMPL_VALUE // TMPL_VALUE
app_global_put
retsub

// update
update_4:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_UPDATABLE // TMPL_UPDATABLE
// Check app is updatable
assert
retsub

// delete
delete_5:
proto 0 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
pushint TMPL_DELETABLE // TMPL_DELETABLE
// Check app is deletable
assert
retsub